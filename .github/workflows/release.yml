name: Build and Release DMG

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
        default: 'v1.7'

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Build DMG
      run: |
        chmod +x build-macos.sh
        ./build-macos.sh
        
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: iFakeLocation-macOS-DMG
        path: build/*.dmg
        retention-days: 30
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: build/*.dmg
        draft: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-cross-platform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [win-x64, win-x86, linux-x64, osx-x64]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Publish ${{ matrix.runtime }}
      run: |
        dotnet publish iFakeLocation/iFakeLocation.csproj \
          -c Release \
          -f net6.0 \
          -r ${{ matrix.runtime }} \
          --self-contained true \
          -o publish/${{ matrix.runtime }}
          
    - name: Create archive (Windows)
      if: startsWith(matrix.runtime, 'win')
      run: |
        cd publish/${{ matrix.runtime }}
        zip -r ../../iFakeLocation-${{ matrix.runtime }}.zip .
        
    - name: Create archive (Linux/macOS)
      if: "!startsWith(matrix.runtime, 'win')"
      run: |
        cd publish/${{ matrix.runtime }}
        tar -czf ../../iFakeLocation-${{ matrix.runtime }}.tar.gz .
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: iFakeLocation-${{ matrix.runtime }}
        path: |
          *.zip
          *.tar.gz
        retention-days: 30
        
    - name: Add to Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.zip
          *.tar.gz
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}